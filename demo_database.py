#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö email –∞–¥—Ä–µ—Å —Ç–∞ –∫–∞–º–ø–∞–Ω—ñ—è–º–∏
"""
import asyncio
import os
from pathlib import Path
from marketing_bot.database.email_database import EmailDatabase
from marketing_bot.services.email_campaign_service import EmailCampaignService

def demo_database_operations():
    print("=== üìã –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –ë–ê–ó–ò –î–ê–ù–ò–• EMAIL ===")
    print()
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ dry-run —Ä–µ–∂–∏–º
    os.environ["SENDER_DRY_RUN"] = "true"
    os.environ["OFFLINE_MODE"] = "true"
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–µ—Ä–≤—ñ—Å–∏
    db = EmailDatabase()
    campaign_service = EmailCampaignService()
    
    print("1Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∑ CSV —Ñ–∞–π–ª—É...")
    added_count = db.add_contacts_from_csv(Path("data/email_contacts_example.csv"), "champions")
    print(f"   ‚úÖ –î–æ–¥–∞–Ω–æ {added_count} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤")
    
    print("\n2Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞—Ö:")
    stats = db.get_contact_count_by_segment()
    for segment, count in stats.items():
        print(f"   üìä {segment}: {count} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤")
    
    print("\n3Ô∏è‚É£ –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤:")
    contacts = db.load_contacts()
    for i, contact in enumerate(contacts[:5], 1):
        print(f"   {i}. {contact.email} ({contact.name}) - {contact.segment}")
    if len(contacts) > 5:
        print(f"   ... —Ç–∞ —â–µ {len(contacts) - 5} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤")
    
    return campaign_service

async def demo_campaign_operations(campaign_service):
    print("\n=== üìß –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –ö–ê–ú–ü–ê–ù–Ü–ô ===")
    print()
    
    print("4Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞–º–ø–∞–Ω—ñ—ó...")
    campaign_id = await campaign_service.create_campaign(
        name="–õ—ñ—Ç–Ω—è —Ä–æ–∑–ø—Ä–æ–¥–∞–∂ 2024",
        subject="üî• –ï–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è - –∑–Ω–∏–∂–∫–∞ 20%!",
        body="""–ü—Ä–∏–≤—ñ—Ç!

–û—Å—å –≤–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è - –∑–Ω–∏–∂–∫–∞ 20% –Ω–∞ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏!

–°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—î—é –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ —Ç–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ.

–ó –ø–æ–≤–∞–≥–æ—é,
–ö–æ–º–∞–Ω–¥–∞ Marketing Bot""",
        segment="champions"
    )
    print(f"   ‚úÖ –ö–∞–º–ø–∞–Ω—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞! ID: {campaign_id}")
    
    print("\n5Ô∏è‚É£ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∫–∞–º–ø–∞–Ω—ñ—ó (dry-run)...")
    result = await campaign_service.send_campaign(
        campaign_id=campaign_id,
        max_emails=3,  # –û–±–º–µ–∂—É—î–º–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
        dry_run=True
    )
    print(f"   ÔøΩÔøΩ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {result['sent']}")
    print(f"   ‚úÖ –£—Å–ø—ñ—à–Ω–æ: {result['success']}")
    print(f"   ‚ùå –ü–æ–º–∏–ª–æ–∫: {result['failed']}")
    
    print("\n6Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–º–ø–∞–Ω—ñ–π:")
    stats = campaign_service.get_campaign_stats()
    print(f"   üìä –í—Å—å–æ–≥–æ –∫–∞–º–ø–∞–Ω—ñ–π: {stats['total_campaigns']}")
    print(f"   üìß –í—Å—å–æ–≥–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats['total_sent']}")
    print(f"   ‚úÖ –£—Å–ø—ñ—à–Ω–∏—Ö: {stats['total_success']}")
    print(f"   üìà –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {stats['success_rate']:.1f}%")

def main():
    print("ü§ñ –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –†–û–ë–û–¢–ò –ó –ë–ê–ó–û–Æ –î–ê–ù–ò–• EMAIL")
    print("=" * 60)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    campaign_service = demo_database_operations()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∫–∞–º–ø–∞–Ω—ñ–π
    asyncio.run(demo_campaign_operations(campaign_service))
    
    print("\n" + "=" * 60)
    print("üí° –í–ò–°–ù–û–í–û–ö:")
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –ø—Ä–∞—Ü—é—î!")
    print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è –∑ CSV")
    print("‚úÖ –ö–∞–º–ø–∞–Ω—ñ—ó —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—é—Ç—å—Å—è")
    print("‚úÖ –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –º–µ—Ç—Ä–∏–∫ –ø—Ä–∞—Ü—é—î")
    print("üîß –î–ª—è —Ä–µ–∞–ª—å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ SMTP/SendGrid")
    print("üåê Streamlit UI –¥–æ–∑–≤–æ–ª—è—î —É–ø—Ä–∞–≤–ª—è—Ç–∏ –≤—Å—ñ–º —á–µ—Ä–µ–∑ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

if __name__ == "__main__":
    main()
